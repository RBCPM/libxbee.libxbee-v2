v2.0.5 - in progress
	Buf fixes:
		+ Fixed memory leaks
		+ Remove O_NONBLOCK from serial port open, fixing hardware flow control implementation
		+ Fixed xbee_listShutdown initialization bug
	Modifications / Additions:
		+ Swapped xbee_pktGet[Analog|Digital]() channel & index parameters
		+ Added XBEE_ENULL for when a pointer is not necessarily used as a pointer (e.g. in a linked list)
		+ Added parsing of I/O data to Series 1 AT packets
		+ Added 'make install_dbg' to install debugging symbols too
		+ Removed 'mapping' functions from xsys_linux.c, and added mapping macros instead (saved ~1.5k)
		+ Implemented xbee_pluginUnload() and added pluginData storage for plugins

v2.0.4 - ada265100533 - 31 Dec 2011
	Modifications / Additions:
		+ Added plugin framework, allows for respawnable functions
		+ Now scans for monitored threads every 10s
		+ Re-architectured I/O data, more flexible and 'future proof'
		+ Added 'extern "C"' for use with C++
		+ Exposed xbee_conValidate() to developers
		+ Added '\0' terminator to all received data
		+ Fixed SEGFAULT in xbee_sG.c (AT receive)
		+ Added 'libxbee_revision', 'libxbee_commit', 'libxbee_committer' and 'libxbee_buildtime' strings to binary
		+ Added 'dual instance' sample

v2.0.3 - f953edb71932 - 18 Dec 2011
	Documentation:
		+ Added basic user documentation to xbee.h
	Bug fixes:
		+ Transmitting multiple frames one after the other could fill the XBee buffer and cause data loss (use RTS/CTS, or delay if XBEE_NO_RTSCTS defined)
		+ Fixed build system (*.d files were generated for wrong target)
	Modifications / Additions:
		+ 'make release' now includes architecture in archive name
		+ Code review on major sources
		+ Added 'XBEE_DISABLE_LOGGING' definition to allow all logging to be removed from the binary (see makefile)
		+ Added parsing of 'XBEE_LOG_LEVEL' environment variable, this is overridden by calls to xbee_logSetLevel()
    + Implemented xbee_conGetTypeList() to allow access to the avaliable connection types
		+ Added xbee instance identification to the log messages

v2.0.2 - a917fb0aa7c5 - 6 Dec 2011
	Modifications / Additions:
		+ Added 'make install'
		+ Added CROSS_COMPILE support
		+ Implemented Series2 Rx,Tx (Explicit & normal) and Status handlers
		+ Added 'endpoint' support for Series2 modules
		+ Fixed premature callback trigger/end
		+ Hid I/O errors until its 'an issue'
		+ Changed options->applyChanges to options->queueChanges, so that the default is to apply
		+ Changed 5 second Tx timeout to 1 second

v2.0.1 - 01f9a11ac931 - 1 Dec 2011
	Bug fixes:
		+ Fixed incorrect addressing semantics
		+ Fixed waitForAck handling
		+ xbee_newCon() can validate addressing for each conType
		+ xbee_modeSet() now correctly creates new memory for the settings. Previously big issues would arise when using mulitple instances of libxbee
		+ Fixed xbee_io_getEscapedByte()
		+ Fixed various segfaults in ll.c
		+ Fixed xbee_setup() and xbee_shutdown() leaks
	Modifications / Additions:
		+ Moved XBEE_E* from errors.h -> xbee.h
		+ Moved struct xbee_conOptions from internal.h -> xbee.h
		+ _xbee_rxCallbackThread() will now idle for 5 seconds before dying
		+ xbee_io_getEscapedByte() now handles unescaped packet re-starts correctly
		+ Added sample applicaions
		+ Added thread monitor, to keep xbee_rx() and xbee_tx() running, possibly more later
		+ Improved handling of I/O data
		+ Added xsys_lockf(), xsys_thread_iAm() and xsys_sem_timedwait()
	New user functions:
		+ xbee_convTx() - pass it a format string and va_list
		+ xbee_connTx() - pass it fixed data & length
		+ xbee_conOptions()
		+ xbee_conGetData()
		+ xbee_conSetData()
		+ xbee_conSleep()
		+ xbee_conWake()

v2.0.0 - a15e66b0a6ef - 26 Nov 2011
	Initial functional release
	User function list:
		+ xbee_validate()
		+ xbee_setup()
		+ xbee_shutdown()
		+ xbee_pktFree()
		+ xbee_modeGetList()
		+ xbee_modeGet()
		+ xbee_modeSet()
		+ xbee_conTypeIdFromName()
		+ xbee_conNew()
		+ xbee_conTx()
		+ xbee_conRx()
		+ xbee_conEnd()
		+ xbee_conAttachCallback()
		+ xbee_logSetTarget()
		+ xbee_logSetLevel()
		+ xbee_log()
	Core functionality:
		+ Rx thread, with threadded packet handling and callbacks
		+ Tx thread
		+ Series 1 packet handling fully supported
